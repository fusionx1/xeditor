<?php

/**
 * @file
 * Install file for Xeditor demo module.
 */

/**
 * Implements hook_install().
 */
function xeditor_demo_install() {
  $t = get_t();
  // This is an ugly solution but the only way so far to make the fields
  // available on field_info_instance().
  try {
    $views = array('default', 'full', 'teaser');
    // Fetch an instance info array.
    foreach ($views as $display) {
      $instance = field_info_instance('node', 'body', 'every_field');
      $field = field_read_field($instance['field_name']);
      // Attempt to capture the error.
      if (empty($instance['field_name'])) {
        throw new FieldException($t('Attempt to update an instance of a nonexistent field @field from @type type.', array(
          '@field' => $instance['field_name'],
          '@type' => 'every_field',
        )));
      }

      // Change a single property in the instance definition.
      if ($display == 'default' || $display == 'full') {
        $instance['display'][$display] = array(
          'label' => 'hidden',
          'type' => 'text_default',
          'weight' => '0',
          'settings' => array(
            'contenteditable' => 'yes',
          ),
          'module' => 'text',
        );
      }
      else {
        $instance['display'][$display] = array(
          'label' => 'hidden',
          'type' => 'text_summary_or_trimmed',
          'weight' => '0',
          'settings' => array(
            'trim_length' => '600',
            'contenteditable' => 'yes',
          ),
          'module' => 'text',
        );
      }
      // Write the changed definition back.
      field_update_instance($instance);
    }
  }
  catch (Exception $e) {
    watchdog('xeditor_demo', 'Error for updating field_config_instance is: ' . $e->getMessage(), WATCHDOG_ERROR);
  }

  // Create a new 'every_field' node for testing inline editing.
  $node = new stdClass();
  $node->uid = 1;
  $node->language = 'und';
  $node->type = 'every_field';
  $node->status = 1;
  $node->promote = 1;

  // Title and body.
  // @todo: It would be great to just show this as full node rather than having
  // to do this "Read More" business. Blocked by http://drupal.org/node/1723126.
  $node->title = $t('Welcome to xEditor!');
  $node->body['und'][0]['value'] = $t('Welcome to a pre-release version of the xEditor distribution! Our goal is to greatly improve the authoring experience of Drupal, through a Drupal 7 distribution that can be used today, but can also be proposed as Drupal 8 core improvements for tomorrow. Read on for more info!

  Please take a look around! Within, you will find such nifty features as:

  <ul>
    <li><strong>Inline Editing</strong>, courtesy of <a href="@module-ffe-url">Field Formatter Editable module</a>. Simply click into this node, log in as an admin, then click the "Quick Edit" link in the sidebar. From there you can click directly into any field to edit its contents. Including this one! For fancier fields like boolean and multivalue, you get just edit the form field directly. Try it out!</li>
    <li><strong>"True" WYSIWYG</strong>, courtesy of <a href="@ckeditor-url">CKEditor v4</a>. Edit your rich text with your theme\'s direct styling through the inline editor. Support for images, tables, paste from Word, and more. :)</li>
    <li><strong>Responsive Layout Builder</strong>, courtesy of the <a href="@module-layout-url">Layout</a> and <a href="@module-grid-url">Gridbuilder</a> modules. It layers on top of Panels (though is architected so it could work on other layout solutions as well). If you want to try it, as an admin go to <a href="@admin-layout-url">Structure &gt; Panels &gt; Custom Layout</a>. You can configure layouts for separate breakpoints (e.g. Mobile, Tablet, Desktop) and even define your own grids. These layouts and grids are all CTools exportable, and become layouts you can use in your Panels pages!</li>
    <li><strong>New admin theme</strong>, brought to you by <a href="@theme-ember-url">Ember</a>. This brings some nice light styling on Drupal core\'s Seven admin theme as well as a mobile-friendly toolbar courtesy of the Admin module. This functionality is still a bit rough, but we\'re actively working on it right now!</li>
  </ul>

  We hope you enjoy playing with Xeditor! We greatly welcome collaboration; join us in the <a href="@xeditor-issues-url">issue queue</a>!', array(
    '@xeditor-issues-url' => 'http://drupal.org/project/issues/xeditor',
    '@module-ffe-url' => 'https://www.drupal.org/sandbox/techwarrior/2309835',
    '@module-layout-url' => 'http://drupal.org/project/layout',
    '@module-grid-url' => 'http://drupal.org/project/gridbuilder',
    '@theme-ember-url' => 'http://drupal.org/project/ember',
    '@ckeditor-url' => 'http://ckeditor.com/',
    '@admin-layout-url' => url('admin/structure/panels/layouts/list/default/edit'),
  ));
  $node->body['und'][0]['format'] = 'filtered_html';

  // Taxonomy.
  $node->every_field_term_reference['und'] = array(
    array(
      'tid' => 'autocreate',
      'vid' => 1,
      'name' => 'tag 1',
      'vocabulary_machine_name' => 'tags',
    ),
    array(
      'tid' => 'autocreate',
      'vid' => 1,
      'name' => 'another tag',
      'vocabulary_machine_name' => 'tags',
    ),
    array(
      'tid' => 'autocreate',
      'vid' => 1,
      'name' => 'yet another tag',
      'vocabulary_machine_name' => 'tags',
    ),
  );

  // @todo: File/Image.
  node_save($node);

  // Set site frontpage to demo page manager page.
  variable_set('site_frontpage', 'xeditor-demo-home');
}

/**
 * Implements hook_uninstall().
 */
function xeditor_demo_uninstall() {
  // Remove the sample content type and content.
  // @todo: Figure out how to get this to work.
  drupal_uninstall_modules(array('every_field'));
}
